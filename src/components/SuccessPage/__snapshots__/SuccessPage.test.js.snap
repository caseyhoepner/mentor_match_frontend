// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SuccessPage should match the snapshot when it came from NewMentorForm 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SuccessPage
    history={
      Object {
        "location": Object {
          "state": Object {
            "from": "/new-mentor-form",
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Success!
        </h1>,
        <div>
          <p>
            Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.
          </p>
        </div>,
      ],
      "className": "sp-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Success!",
        },
        "ref": null,
        "rendered": "Success!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.
          </p>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.",
          },
          "ref": null,
          "rendered": "Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.",
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Success!
          </h1>,
          <div>
            <p>
              Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.
            </p>
          </div>,
        ],
        "className": "sp-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Success!",
          },
          "ref": null,
          "rendered": "Success!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.
            </p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.",
            },
            "ref": null,
            "rendered": "Thank you for signing up to be a mentor! We'll be in touch when we find you a student to mentor.",
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`SuccessPage should match the snapshot when it came from NewStudentForm 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SuccessPage
    history={
      Object {
        "location": Object {
          "state": Object {
            "from": "/new-student-form",
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Success!
        </h1>,
        <div>
          <p>
            New student successfully added!
          </p>
          <Link
            className="sp-new-student-btn"
            replace={false}
            to="/new-student-form"
          >
            Add Another Student
          </Link>
        </div>,
      ],
      "className": "sp-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Success!",
        },
        "ref": null,
        "rendered": "Success!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              New student successfully added!
            </p>,
            <Link
              className="sp-new-student-btn"
              replace={false}
              to="/new-student-form"
            >
              Add Another Student
            </Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New student successfully added!",
            },
            "ref": null,
            "rendered": "New student successfully added!",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add Another Student",
              "className": "sp-new-student-btn",
              "replace": false,
              "to": "/new-student-form",
            },
            "ref": null,
            "rendered": "Add Another Student",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Success!
          </h1>,
          <div>
            <p>
              New student successfully added!
            </p>
            <Link
              className="sp-new-student-btn"
              replace={false}
              to="/new-student-form"
            >
              Add Another Student
            </Link>
          </div>,
        ],
        "className": "sp-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Success!",
          },
          "ref": null,
          "rendered": "Success!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                New student successfully added!
              </p>,
              <Link
                className="sp-new-student-btn"
                replace={false}
                to="/new-student-form"
              >
                Add Another Student
              </Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "New student successfully added!",
              },
              "ref": null,
              "rendered": "New student successfully added!",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add Another Student",
                "className": "sp-new-student-btn",
                "replace": false,
                "to": "/new-student-form",
              },
              "ref": null,
              "rendered": "Add Another Student",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
