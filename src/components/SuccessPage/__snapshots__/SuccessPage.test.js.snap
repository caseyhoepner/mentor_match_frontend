// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SuccessPage should match the snapshot when it came from NewMentorForm 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SuccessPage
    history={
      Object {
        "location": Object {
          "state": Object {
            "from": "/new-mentor-form",
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="Success Icon"
          className="sp-icon"
          src={
            Object {
              "ReactComponent": [Function],
              "__esModule": true,
              "default": "success-check.svg",
            }
          }
        />,
        <h1
          className="sp-title"
        >
          Success!
        </h1>,
        <div
          className="sp-text"
        >
          <p>
            Thank you for your interest in mentoring our students. We will reach out to you shortly.
          </p>
          <p>
            If you have any questions, reach out to
            <a
              className="sp-email-link"
              href="mailto:kayt@turing.io"
            >
               kayt@turing.io
            </a>
            .
          </p>
        </div>,
      ],
      "className": "sp-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "Success Icon",
          "className": "sp-icon",
          "src": Object {
            "ReactComponent": [Function],
            "__esModule": true,
            "default": "success-check.svg",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Success!",
          "className": "sp-title",
        },
        "ref": null,
        "rendered": "Success!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Thank you for your interest in mentoring our students. We will reach out to you shortly.
            </p>,
            <p>
              If you have any questions, reach out to
              <a
                className="sp-email-link"
                href="mailto:kayt@turing.io"
              >
                 kayt@turing.io
              </a>
              .
            </p>,
          ],
          "className": "sp-text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Thank you for your interest in mentoring our students. We will reach out to you shortly.",
            },
            "ref": null,
            "rendered": "Thank you for your interest in mentoring our students. We will reach out to you shortly.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "If you have any questions, reach out to",
                <a
                  className="sp-email-link"
                  href="mailto:kayt@turing.io"
                >
                   kayt@turing.io
                </a>,
                ".",
              ],
            },
            "ref": null,
            "rendered": Array [
              "If you have any questions, reach out to",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " kayt@turing.io",
                  "className": "sp-email-link",
                  "href": "mailto:kayt@turing.io",
                },
                "ref": null,
                "rendered": " kayt@turing.io",
                "type": "a",
              },
              ".",
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="Success Icon"
            className="sp-icon"
            src={
              Object {
                "ReactComponent": [Function],
                "__esModule": true,
                "default": "success-check.svg",
              }
            }
          />,
          <h1
            className="sp-title"
          >
            Success!
          </h1>,
          <div
            className="sp-text"
          >
            <p>
              Thank you for your interest in mentoring our students. We will reach out to you shortly.
            </p>
            <p>
              If you have any questions, reach out to
              <a
                className="sp-email-link"
                href="mailto:kayt@turing.io"
              >
                 kayt@turing.io
              </a>
              .
            </p>
          </div>,
        ],
        "className": "sp-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Success Icon",
            "className": "sp-icon",
            "src": Object {
              "ReactComponent": [Function],
              "__esModule": true,
              "default": "success-check.svg",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Success!",
            "className": "sp-title",
          },
          "ref": null,
          "rendered": "Success!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Thank you for your interest in mentoring our students. We will reach out to you shortly.
              </p>,
              <p>
                If you have any questions, reach out to
                <a
                  className="sp-email-link"
                  href="mailto:kayt@turing.io"
                >
                   kayt@turing.io
                </a>
                .
              </p>,
            ],
            "className": "sp-text",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Thank you for your interest in mentoring our students. We will reach out to you shortly.",
              },
              "ref": null,
              "rendered": "Thank you for your interest in mentoring our students. We will reach out to you shortly.",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "If you have any questions, reach out to",
                  <a
                    className="sp-email-link"
                    href="mailto:kayt@turing.io"
                  >
                     kayt@turing.io
                  </a>,
                  ".",
                ],
              },
              "ref": null,
              "rendered": Array [
                "If you have any questions, reach out to",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " kayt@turing.io",
                    "className": "sp-email-link",
                    "href": "mailto:kayt@turing.io",
                  },
                  "ref": null,
                  "rendered": " kayt@turing.io",
                  "type": "a",
                },
                ".",
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`SuccessPage should match the snapshot when it came from NewStudentForm 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SuccessPage
    history={
      Object {
        "location": Object {
          "state": Object {
            "from": "/new-student-form",
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="Success Icon"
          className="sp-icon"
          src={
            Object {
              "ReactComponent": [Function],
              "__esModule": true,
              "default": "success-check.svg",
            }
          }
        />,
        <h1
          className="sp-title"
        >
          Success!
        </h1>,
        <div
          className="sp-text"
        >
          <p>
            New student successfully added!
          </p>
          <Link
            className="sp-new-student-btn"
            replace={false}
            to="/new-student-form"
          >
            + Add Another Student
          </Link>
        </div>,
      ],
      "className": "sp-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "Success Icon",
          "className": "sp-icon",
          "src": Object {
            "ReactComponent": [Function],
            "__esModule": true,
            "default": "success-check.svg",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Success!",
          "className": "sp-title",
        },
        "ref": null,
        "rendered": "Success!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              New student successfully added!
            </p>,
            <Link
              className="sp-new-student-btn"
              replace={false}
              to="/new-student-form"
            >
              + Add Another Student
            </Link>,
          ],
          "className": "sp-text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New student successfully added!",
            },
            "ref": null,
            "rendered": "New student successfully added!",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "+ Add Another Student",
              "className": "sp-new-student-btn",
              "replace": false,
              "to": "/new-student-form",
            },
            "ref": null,
            "rendered": "+ Add Another Student",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="Success Icon"
            className="sp-icon"
            src={
              Object {
                "ReactComponent": [Function],
                "__esModule": true,
                "default": "success-check.svg",
              }
            }
          />,
          <h1
            className="sp-title"
          >
            Success!
          </h1>,
          <div
            className="sp-text"
          >
            <p>
              New student successfully added!
            </p>
            <Link
              className="sp-new-student-btn"
              replace={false}
              to="/new-student-form"
            >
              + Add Another Student
            </Link>
          </div>,
        ],
        "className": "sp-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Success Icon",
            "className": "sp-icon",
            "src": Object {
              "ReactComponent": [Function],
              "__esModule": true,
              "default": "success-check.svg",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Success!",
            "className": "sp-title",
          },
          "ref": null,
          "rendered": "Success!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                New student successfully added!
              </p>,
              <Link
                className="sp-new-student-btn"
                replace={false}
                to="/new-student-form"
              >
                + Add Another Student
              </Link>,
            ],
            "className": "sp-text",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "New student successfully added!",
              },
              "ref": null,
              "rendered": "New student successfully added!",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "+ Add Another Student",
                "className": "sp-new-student-btn",
                "replace": false,
                "to": "/new-student-form",
              },
              "ref": null,
              "rendered": "+ Add Another Student",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
