// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminMentorModal should match the snapshot with props and when it is editable 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdminMentorModal
    currentMentor={
      Object {
        "active": true,
        "background": "I am a mentor!",
        "city": "Denver",
        "country": "USA",
        "current_employer": "Department of Mentors",
        "current_title": "Head Mentor",
        "email": "menty@mentor.com",
        "expertise_non_tech": Array [
          "Parenting",
        ],
        "expertise_tech": Array [
          "React.js",
        ],
        "identity_preference": Array [
          "female-identifying",
        ],
        "industries": Array [
          "Civic Tech",
        ],
        "matched": true,
        "meeting_location": "Turing",
        "mentee_capacity": "2",
        "name": "Menty the Mentor",
        "pronouns": "she/her/hers",
        "slack_username": "@Menty",
        "state": "CO",
        "ways_to_mentor": Array [
          "Coffee Meetings",
        ],
      }
    }
    students={
      Array [
        Object {
          "name": "Casey",
        },
        Object {
          "name": "Alex",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "amm-modal-hide",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "amm-modal-hide",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AdminMentorModal should match the snapshot with props and when it is not editable 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdminMentorModal
    currentMentor={
      Object {
        "active": true,
        "background": "I am a mentor!",
        "city": "Denver",
        "country": "USA",
        "current_employer": "Department of Mentors",
        "current_title": "Head Mentor",
        "email": "menty@mentor.com",
        "expertise_non_tech": Array [
          "Parenting",
        ],
        "expertise_tech": Array [
          "React.js",
        ],
        "identity_preference": Array [
          "female-identifying",
        ],
        "industries": Array [
          "Civic Tech",
        ],
        "matched": true,
        "meeting_location": "Turing",
        "mentee_capacity": "2",
        "name": "Menty the Mentor",
        "pronouns": "she/her/hers",
        "slack_username": "@Menty",
        "state": "CO",
        "ways_to_mentor": Array [
          "Coffee Meetings",
        ],
      }
    }
    students={
      Array [
        Object {
          "name": "Casey",
        },
        Object {
          "name": "Alex",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "amm-modal-hide",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "amm-modal-hide",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AdminMentorModal should match the snapshot without mentor props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdminMentorModal
    students={
      Array [
        Object {
          "name": "Casey",
        },
        Object {
          "name": "Alex",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "amm-modal-hide",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "amm-modal-hide",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
